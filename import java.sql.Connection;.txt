import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.*;

abstract class Employee {
    protected String name;
    protected int age;

    public Employee(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public abstract void work();
}

class Developer extends Employee {
    private int empId;
    private static int count = 0;

    public Developer(String name, int age, int empId) {
        super(name, age);
        this.empId = empId;
        count++;
    }

    public int getEmpId() {
        return empId;
    }

    public void setEmpId(int empId) {
        this.empId = empId;
    }

    public static int getCount() {
        return count;
    }

    @Override
    public void work() {
        System.out.println("Developer ID: " + empId + ", Name: " + name + ", Age: " + age);
    }

    @Override
    protected void finalize() throws Throwable {
        System.out.println("Developer with ID " + empId + " is garbage collected");
        super.finalize();
    }
}

class SeniorDeveloper extends Developer {
    private String project;

    public SeniorDeveloper(String name, int age, int empId, String project) {
        super(name, age, empId);
        this.project = project;
    }

    @Override
    public void work() {
        super.work();
        System.out.println("Project: " + project);
    }
}

final class Utils {
    public static void printHeader(String title) {
        System.out.println("====== " + title + " ======");
    }
}

public class Company {
    public static void main(String[] args) {
        Developer[] devs = new Developer[3];
        devs[0] = new Developer("Alice", 25, 1001);
        devs[1] = new SeniorDeveloper("Bob", 30, 1002, "AI Module");
        devs[2] = new Developer("Charlie", 28, 1003);

        Utils.printHeader("Object Array & Polymorphism");

        for (Developer d : devs) {
            d.work();
        }

        System.out.println("Total Developers: " + Developer.getCount());

        List<Developer> devList = new ArrayList<>();
        Collections.addAll(devList, devs);

        Utils.printHeader("Collections Framework");

        devList.forEach(Developer::work);

        Utils.printHeader("Exception Handling");

        try {
            int x = 10 / 0;
        } catch (ArithmeticException e) {
            System.out.println("Exception: " + e.getMessage());
        }

        /*
        try {
            String url = "jdbc:mysql://localhost:3306/companydb";
            String user = "root";
            String password = "yourpassword";

            Connection conn = DriverManager.getConnection(url, user, password);

            String sql = "INSERT INTO employees (id, name, age) VALUES (?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, 1004);
            stmt.setString(2, "David");
            stmt.setInt(3, 26);

            int rows = stmt.executeUpdate();
            System.out.println("Inserted Rows: " + rows);

            conn.close();
        } catch (SQLException e) {
            System.out.println("JDBC Error: " + e.getMessage());
        }
        */

        devs[0] = null;
        System.gc();
    }
}
